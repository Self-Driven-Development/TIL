"use strict";(self.webpackChunkdogsounds_til=self.webpackChunkdogsounds_til||[]).push([[6018],{68339:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>c});var l=t(39953);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,l)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,l,r=function(n,e){if(null==n)return{};var t,l,r={},i=Object.keys(n);for(l=0;l<i.length;l++)t=i[l],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(l=0;l<i.length;l++)t=i[l],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var o=l.createContext({}),p=function(n){var e=l.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},s=function(n){var e=p(n.components);return l.createElement(o.Provider,{value:e},n.children)},m="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return l.createElement(l.Fragment,{},e)}},b=l.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,o=n.parentName,s=u(n,["components","mdxType","originalType","parentName"]),m=p(t),b=r,c=m["".concat(o,".").concat(b)]||m[b]||d[b]||i;return t?l.createElement(c,a(a({ref:e},s),{},{components:t})):l.createElement(c,a({ref:e},s))}));function c(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,a=new Array(i);a[0]=b;var u={};for(var o in e)hasOwnProperty.call(e,o)&&(u[o]=e[o]);u.originalType=n,u[m]="string"==typeof n?n:r,a[1]=u;for(var p=2;p<i;p++)a[p]=t[p];return l.createElement.apply(null,a)}return l.createElement.apply(null,t)}b.displayName="MDXCreateElement"},94363:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var l=t(855),r=(t(39953),t(68339));const i={title:"07.04(\ud654) \uc77c\uc9c0",authors:["hfjxjjd123"]},a="\uc624\ub298 \ud55c \uc77c",u={unversionedId:"\uc774\ud559\ub9bc/23.07/07.04 \ud654",id:"\uc774\ud559\ub9bc/23.07/07.04 \ud654",title:"07.04(\ud654) \uc77c\uc9c0",description:"- Rust \uacf5\ubd80(\uac15\uc758)",source:"@site/members/\uc774\ud559\ub9bc/23.07/07.04 \ud654.md",sourceDirName:"\uc774\ud559\ub9bc/23.07",slug:"/\uc774\ud559\ub9bc/23.07/07.04 \ud654",permalink:"/TIL/members/\uc774\ud559\ub9bc/23.07/07.04 \ud654",draft:!1,editUrl:"https://github.com/Self-Driven-Development/TIL/tree/main/members/\uc774\ud559\ub9bc/23.07/07.04 \ud654.md",tags:[],version:"current",frontMatter:{title:"07.04(\ud654) \uc77c\uc9c0",authors:["hfjxjjd123"]},sidebar:"all",previous:{title:"07.03(\uc544\ubb34\uac83\ub3c4\uc548\ud568) \uc77c\uc9c0",permalink:"/TIL/members/\uc774\ud559\ub9bc/23.07/07.03NOTIL"},next:{title:"07.05(\uc218) \uc77c\uc9c0",permalink:"/TIL/members/\uc774\ud559\ub9bc/23.07/07.05 \uc218"}},o={},p=[{value:"\ud83e\udd80 Rust \uc2e4\uc2b5 - \uc601\uc218\uc99d \uad00\ub9ac \ud504\ub85c\uadf8\ub7a8",id:"-rust-\uc2e4\uc2b5---\uc601\uc218\uc99d-\uad00\ub9ac-\ud504\ub85c\uadf8\ub7a8",level:2},{value:"\uc790\uccb4 \ud53c\ub4dc\ubc31",id:"\uc790\uccb4-\ud53c\ub4dc\ubc31",level:3},{value:"\ud83d\udc8a \uc57d \ub4f1\ub85d \ud398\uc774\uc9c0 UI \uad6c\ud604",id:"-\uc57d-\ub4f1\ub85d-\ud398\uc774\uc9c0-ui-\uad6c\ud604",level:2},{value:"\ud83c\udfaf Button \uc0c9\uc0c1 \ubcc0\uacbd",id:"-button-\uc0c9\uc0c1-\ubcc0\uacbd",level:3},{value:"\ud83c\udfaf Row(LinearLayout-horizontal) \ucd5c\ub300\uac04\uaca9\uc73c\ub85c \ub9cc\ub4e4\uae30",id:"-rowlinearlayout-horizontal-\ucd5c\ub300\uac04\uaca9\uc73c\ub85c-\ub9cc\ub4e4\uae30",level:3},{value:"\ud83c\udfaf Material Icon \ub9ac\uc18c\uc2a4\ub85c \ub4f1\ub85d\ud558\uae30",id:"-material-icon-\ub9ac\uc18c\uc2a4\ub85c-\ub4f1\ub85d\ud558\uae30",level:3},{value:"\ud83c\udfa8 \uba54\uc778\ud398\uc774\uc9c0 \ub514\uc790\uc778 \uc911",id:"-\uba54\uc778\ud398\uc774\uc9c0-\ub514\uc790\uc778-\uc911",level:2}],s={toc:p},m="wrapper";function d(n){let{components:e,...t}=n;return(0,r.kt)(m,(0,l.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\uc624\ub298-\ud55c-\uc77c"},"\uc624\ub298 \ud55c \uc77c"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Rust \uacf5\ubd80(\uac15\uc758)"),(0,r.kt)("li",{parentName:"ul"},"\uc57d\uc54c\ub9bc \uc571 \uc57d \ub4f1\ub85d \ud398\uc774\uc9c0 UI \uad6c\ud604"),(0,r.kt)("li",{parentName:"ul"},"\uc57d\uc54c\ub9bc \uc571 \uba54\uc778 \ud398\uc774\uc9c0 \ub514\uc790\uc778 \uad6c\ud604\uc911")),(0,r.kt)("br",null),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-rust-\uc2e4\uc2b5---\uc601\uc218\uc99d-\uad00\ub9ac-\ud504\ub85c\uadf8\ub7a8"},"\ud83e\udd80 Rust \uc2e4\uc2b5 - \uc601\uc218\uc99d \uad00\ub9ac \ud504\ub85c\uadf8\ub7a8"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'// Project 1: Interactive bill manager\n//\n// User stories:\n// * I want to add bills, including the name and amount owed.\n// * I want to view existing bills.\n// * I want to remove bills.\n// * I want to edit existing bills.\n// * I want to go back if I change my mind.\n\nuse std::io;\nuse std::io::{stdout, Write};\n\nfn main() {\n    user_interactive();\n}\n\n//\uad6c\uc870\uccb4 \uc815\uc758\nstruct Bill{\n    name: String,\n    owed: f64,\n    num: i32,\n}\nimpl Bill{\n    fn new(name: &str, owed: f64, num: i32) -> Self{\n        Self{\n            name: name.to_owned(),\n            owed: owed,\n            num: num\n        }\n    }\n}\n\n//INTERACTIVE - \uc0ac\uc6a9\uc790 \uc18c\ud1b5 \ub85c\uc9c1\nfn user_interactive() -> Result<(), io::Error> {\n    let mut bills: Vec<Bill> = vec![];\n    let mut BILL_NUMS = 0;\n\n    loop{\n        println!("1:\uc601\uc218\uc99d \ucd94\uac00, 2:\uc601\uc218\uc99d \uc870\ud68c, 3:\uc601\uc218\uc99d \uc0ad\uc81c, 4:\uc601\uc218\uc99d \uc218\uc815, 5:\uc774\uc804 \uc791\uc5c5 \ucde8\uc18c");\n        print!("\uc5b4\ub5a4 \uc791\uc5c5\uc744 \ud558\uc2dc\uaca0\uc5b4\uc694? => ");\n        io::stdout().flush(); \n\n        let user_input = get_input()?;\n        match user_input.as_str() {\n            "1" => add_bill(&mut bills, &mut BILL_NUMS),\n            "2" => read_bill(&mut bills),\n            "3" => delete_bill(&mut bills),\n            "4" => update_bill(&mut bills, &mut BILL_NUMS),\n            _ => println!("not impl yet"),\n        }\n\n        println!("");\n    }\n\n}\n\n// \uc0ac\uc6a9\uc790 \uc785\ub825\uac12 \ubc1b\uc544\uc11c Result<String>\ub85c \ubc18\ud658 \ud568\uc218\nfn get_input() -> Result<String, io::Error> {\n    let mut buffer = String::new();\n    io::stdin().read_line(&mut buffer)?;\n    \n    Ok(buffer.trim().to_owned())\n}\n\n//ADD \uad6c\ud604\nfn add_bill(bills: &mut Vec<Bill>, BILL_NUMS: &mut i32) {\n    let mut result: Result<String, io::Error>;\n    let mut name = String::new();\n    let mut owed: f64 = 0.0;\n\n    print!("\uc774\ub984: ");\n    io::stdout().flush(); \n    result = get_input();\n    match result{\n        Ok(buffer) => {\n            name = buffer;\n        }\n        Err(_) => {\n            println!("Add failed - IO issue");\n        }\n    }\n    print!("\uac00\uaca9: ");\n    io::stdout().flush(); \n    result = get_input();\n    match result{\n        Ok(buffer) => {\n            owed = buffer.parse().unwrap();\n        }\n        Err(_) => {\n            println!("Add failed - IO issue");\n        }\n    }\n\n    let bill = Bill::new(&name, owed, *BILL_NUMS);\n    *BILL_NUMS += 1;\n    bills.push(bill);\n}\n\n// READ \uad6c\ud604\nfn read_bill(bills: &Vec<Bill>){\n    let mut result: Result<String, io::Error>;\n    let mut i: i32 = 0;\n\n    print!("\uc774\ub984: ");\n    io::stdout().flush(); \n    result = get_input();\n\n    match result{\n        Ok(name) => {\n\n            for bill in bills{\n                if bill.name == name{\n                    println!("[{:?}] #{:?} name: {:?}, owed: {:?}", i, bill.num, bill.name, bill.owed);\n                    i+=1;\n                }\n            }\n            if i == 0 {\n                println!("name: {:?} bill NOT FOUND!", name);\n            }\n        }\n        Err(_) => {\n            println!("Read failed - IO issue");\n        }\n    }\n}\n\n// Delete \uad6c\ud604\nfn delete_bill(bills: &mut Vec<Bill>){\n    let mut result: Result<String, io::Error>;\n    let mut bill_num = -1;\n    let mut index = 0;\n\n    print!("\uc0ad\uc81c\ud560 \uc601\uc218\uc99d \ubc88\ud638: ");\n    io::stdout().flush(); \n    result = get_input();\n\n    match result{\n        Ok(num) => {\n            bill_num = num.parse().unwrap();\n\n            for bill in &mut *bills{\n                if bill.num == bill_num{\n                    bills.remove(index);\n                    println!("Delete #{:?}", bill_num);\n                    break;\n                }\n                index+=1;\n            }\n            if index == bills.len(){\n                println!("#{:?} does not exist", bill_num);\n            }\n        }\n        Err(_) => {\n            println!("Add failed - IO issue");\n        }\n    }\n\n\n}\n\n// UPDATE \uad6c\ud604\nfn update_bill(bills: &mut Vec<Bill>, BILL_NUMS: &mut i32){\n    let mut result: Result<String, io::Error>;\n    let mut bill_num = -1;\n    let mut price:f64 = 0.0;\n    let mut index = 0;\n    let mut exist = false;\n\n    print!("\ubc14\uafc0 \uc601\uc218\uc99d \ubc88\ud638: ");\n    io::stdout().flush(); \n    result = get_input();\n\n    match result{\n        Ok(num) => {\n            bill_num = num.parse().unwrap();\n\n            for bill in &mut *bills{\n                if bill.num == bill_num{\n                    println!("#{:?} name: {:?}, owed: {:?}", bill.num, bill.name, bill.owed);\n                    exist = true;\n                    break;\n                }\n                index+=1;\n            }\n            if !exist{\n                println!("#{:?} does not exist", bill_num);\n            }\n        }\n        Err(_) => {\n            println!("Add failed - IO issue");\n        }\n    }\n\n    if exist{\n        print!("\uc218\uc815\ud560 \uae08\uc561: ");\n        io::stdout().flush(); \n        result = get_input();\n\n        match result{\n            Ok(prices) => {\n                price = prices.parse().unwrap();\n                let bill: Bill = Bill::new(\n                    bills[index].name.as_str(),\n                    price,\n                    bills[index].num,\n                );\n\n                bills.remove(index);\n                bills.push(bill);\n\n                println!("=> owed: {:?}", price);\n            }\n            Err(_) => {\n                println!("Add failed - IO issue");\n            }\n        }\n    }\n}\n\n// Roll back\n\ubbf8\uad6c\ud604\n\n')),(0,r.kt)("h3",{id:"\uc790\uccb4-\ud53c\ub4dc\ubc31"},"\uc790\uccb4 \ud53c\ub4dc\ubc31"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"add, remove, read\uc758 \uc7ac\uc0ac\uc6a9\uc131\uc744 \uace0\ub824\ud588\uc5b4\uc57c\ud55c\ub2e4. - update\uc5d0\uc11c \ubaa8\ub450 \uc0ac\uc6a9\ub418\uae30 \ub54c\ubb38  "),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"add"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"remove"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"read")," \ud568\uc218 \ub0b4\ubd80\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc785\ub825\uac12\uc744 \ubc1b\uc544\uc11c \ud578\ub4e4\ub9c1",(0,r.kt)("br",{parentName:"p"}),"\n","\u2192 \uc785\ub825 \uad00\ub9ac buffer\uac00 ",(0,r.kt)("inlineCode",{parentName:"p"},"\ud568\uc218"),"\uc758 \uc778\uc790\ub85c \uac70\uccd0\uc9c0\uc9c0 \uc54a\uace0 \uac04\ub2e8\ud55c \uad6c\uc870\ub85c \uc9dc\uace0\uc790 \ud588\uc74c"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u21d2 ",(0,r.kt)("inlineCode",{parentName:"strong"},"\ud568\uc218")," \uc678\ubd80\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc785\ub825\uac12\uc744 \ubc84\ud37c\uc5d0 \uc800\uc7a5\ud558\uace0 \uc778\uc790\uac12\uc73c\ub85c \ub118\uaca8\uc8fc\uc5b4 \uac12\uc744 \ud578\ub4e4\ub9c1\ud588\uc5b4\uc57c\ud55c\ub2e4."),(0,r.kt)("br",{parentName:"p"}),"\n","\uadf8 \uc774\uc720\ub294 \uc778\uc790\uac12\uc744 \ubc1b\ub294 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uba74 \uc0ac\uc6a9\uc790\uac00 \uc785\ub825\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub0b4\ubd80\uc801\uc73c\ub85c \uad00\ub9ac\ud560 \ub54c \uadf8 \ub85c\uc9c1\uc774 \ud544\uc694\ud558\uba74 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c\ud558\uae30 \uc704\ud574\uc11c\uc774\ub2e4. \u2192 \uc218\uc815\uc740 \uadc0\ucc2e\uc73c\ub2c8 \ub85c\uc9c1\ub9cc \uc774\ub807\uac8c \uc0dd\uac01\ud574\ub450\uc790."),(0,r.kt)("br",null)),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Collection \uad6c\uc870\ub85c vector\ub97c \uc120\ud0dd\ud588\ub2e4."),(0,r.kt)("p",{parentName:"li"},"\u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},"HashMap"),"\uc73c\ub85c\ub294 key\uc758 \ucda9\ub3cc\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub2e4\uace0 \uc0dd\uac01\ud588\uae30 \ub54c\ubb38"),(0,r.kt)("p",{parentName:"li"},"\u21d2 key\ub97c ",(0,r.kt)("inlineCode",{parentName:"p"},"\uc0ac\ub78c: String"),"\uc774 \uc544\ub2cc ",(0,r.kt)("inlineCode",{parentName:"p"},"bill num: i32"),"\uc73c\ub85c \ud588\ub2e4\uba74 \uae54\ub054\ud558\uac8c \uc815\ub9ac\ub410\uc744 \uac83 \uac19\ub2e4."),(0,r.kt)("p",{parentName:"li"},"\u21d2 key\uac00 \uc0ac\ub78c \uc774\ub984\uc778\uac8c \ucd94\uc0c1\ud654\ub85c\ub294 \uc633\uc9c0\ub9cc \ucef4\ud4e8\ud130 \ub0b4\ubd80 \uad00\ub9ac\uc6a9\uc73c\ub85c HashMap\ub3c4 \ub098\uc058\uc9c0 \uc54a\uc740 \uac83 \uac19\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uadf8\ub807\ub2e4\uace0 vec\ubcf4\ub2e4 HashMap\uc774 \uc88b\ub0d0\uace0 \ubb3c\uc5b4\ubcf4\uba74 \ub098\ub294 \uc798 \ubaa8\ub974\uaca0\ub2e4."))),(0,r.kt)("br",null),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-\uc57d-\ub4f1\ub85d-\ud398\uc774\uc9c0-ui-\uad6c\ud604"},"\ud83d\udc8a \uc57d \ub4f1\ub85d \ud398\uc774\uc9c0 UI \uad6c\ud604"),(0,r.kt)("h3",{id:"-button-\uc0c9\uc0c1-\ubcc0\uacbd"},"\ud83c\udfaf Button \uc0c9\uc0c1 \ubcc0\uacbd"),(0,r.kt)("p",null,": \uae30\ubcf8\uc801\uc73c\ub85c theme\uc744 \uc4f4\ub2e4\uba74 default color\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"android:colorAccent")," \ub77c\uace0 \ud55c\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"[case 1]"," Button Style\uc774 \uc5c6\ub294 \uacbd\uc6b0"),(0,r.kt)("br",{parentName:"p"}),"\n","\u2192 ",(0,r.kt)("inlineCode",{parentName:"p"},'android:backgroudTint = "colors/SOMETHING"')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"[case 2]"," Button Style\uc744 \uc124\uc815\ud574\uc900 \uacbd\uc6b0"),(0,r.kt)("br",{parentName:"p"}),"\n","\u2192 \ubbf8\ud574\uacb0",(0,r.kt)("br",{parentName:"p"}),"\n","\u21d2 \ubc84\ud2bc UI\ub85c \ub9cc\ub4e0 \ud6c4 \ud074\ub9ad\uc2dc \uc0c1\ud0dc \ubcc0\ud654\ub97c \uc5b4\ub5bb\uac8c\ud560\uc9c0 \uc0dd\uac01\ub9cc\ud574\ub3c4 \uba38\ub9ac\uc544\ud504\ub2e4."),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"-rowlinearlayout-horizontal-\ucd5c\ub300\uac04\uaca9\uc73c\ub85c-\ub9cc\ub4e4\uae30"},"\ud83c\udfaf Row(LinearLayout-horizontal) \ucd5c\ub300\uac04\uaca9\uc73c\ub85c \ub9cc\ub4e4\uae30"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"[\uc2dc\ub3c4 1]"," LinearLayout gravity\ub97c \uc4f0\ub294 \uacbd\uc6b0"),(0,r.kt)("br",{parentName:"p"}),"\n","\u2192 \ubabb\ucc3e\uc558\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"[\uc2dc\ub3c4 2]"," Flutter\uc758 Extended\uc640 \uac19\uc774 \ube48\uacf5\uac04\uc744 \ubaa8\ub450 \ucc28\uc9c0\ud560 \uc704\uc82f\uc744 \ucc3e\ub294\ub2e4."),(0,r.kt)("br",{parentName:"p"}),"\n","\u21d2 weight\ub97c \uc911\uac04 Space \ucef4\ud3ec\ub10c\ud2b8\ub9cc 1\ub85c \uc124\uc815\ud568\uc73c\ub85c\uc368 \ud574\uacb0"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"[\uc7ac\uc6b1\ub2d8\uc758 \ud53c\ub4dc\ubc31]"," LinearLayout\ubcf4\ub2e8 ConstraintLayout\uc73c\ub85c \uc2a4\ud06c\ub9b0\uc758 \uc0c1\ub300\uc801 \uc704\uce58\uc5d0 \ub530\ub77c \ubc30\uce58\ud558\ub294 \uac83\uc744 \ucd94\ucc9c"),(0,r.kt)("br",{parentName:"p"}),"\n","\u21d2  Linear\ub85c \ubc30\uce58\ud558\ub294 \uacbd\uc6b0 Linear\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ucef4\ud3ec\ub10c\ud2b8-children-\uc758 \ud06c\uae30\ub97c \ub3d9\uc801\uc73c\ub85c \ud578\ub4e4\ub9c1\ud558\uae30\uac00 \ud798\ub4e4\uae30 \ub54c\ubb38\uc5d0",(0,r.kt)("br",{parentName:"p"}),"\n","\uc2a4\ud06c\ub9b0\uc758 \ud06c\uae30\uac00 \ub2ec\ub77c\uc9c8 \ub54c \uc608\uc0c1\uce58 \ubabb\ud558\uac8c \uc704\uce58\uac00 \uae68\uc9c8 \uc218 \uc788\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","=> \uc774 \ud53c\ub4dc\ubc31\uc744 \uace0\ub824\ud574\ubd24\uc744 \ub54c, Linear\ub294 ScrollView\uc640 \uac19\uc774 \uba85\ud655\ud558\uac8c \ud544\uc694\ud55c \uc0c1\ud669\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud558\ub294 \uac8c \uc88b\uc744 \uac83 \uac19\ub2e4.  "),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"-material-icon-\ub9ac\uc18c\uc2a4\ub85c-\ub4f1\ub85d\ud558\uae30"},"\ud83c\udfaf Material Icon \ub9ac\uc18c\uc2a4\ub85c \ub4f1\ub85d\ud558\uae30"),(0,r.kt)("p",null,": drawable > new > vector image > \uac80\uc0c9 \ud6c4 \ub4f1\ub85d"),(0,r.kt)("br",null),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"-\uba54\uc778\ud398\uc774\uc9c0-\ub514\uc790\uc778-\uc911"},"\ud83c\udfa8 \uba54\uc778\ud398\uc774\uc9c0 \ub514\uc790\uc778 \uc911"),(0,r.kt)("img",{width:"274",alt:"\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2023-07-04 \u110b\u1169\u1112\u116e 10 24 29",src:"https://github.com/Self-Driven-Development/TIL/assets/63008138/44cca9ca-1421-437f-a7ef-5bec26acd1b1"}))}d.isMDXComponent=!0}}]);