"use strict";(self.webpackChunkdogsounds_til=self.webpackChunkdogsounds_til||[]).push([[2054],{8339:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var r=n(9953);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=u(n),k=a,c=m["".concat(p,".").concat(k)]||m[k]||d[k]||l;return n?r.createElement(c,i(i({ref:t},s),{},{components:n})):r.createElement(c,i({ref:t},s))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5090:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=n(855),a=(n(9953),n(8339));const l={title:"07.05(\uc218) \uc77c\uc9c0",authors:["hfjxjjd123"]},i="\uc624\ub298\ud55c \uc77c",o={unversionedId:"\uc774\ud559\ub9bc/23.07/07.05 \uc218",id:"\uc774\ud559\ub9bc/23.07/07.05 \uc218",title:"07.05(\uc218) \uc77c\uc9c0",description:"- Rust \uacf5\ubd80",source:"@site/members/\uc774\ud559\ub9bc/23.07/07.05 \uc218.md",sourceDirName:"\uc774\ud559\ub9bc/23.07",slug:"/\uc774\ud559\ub9bc/23.07/07.05 \uc218",permalink:"/TIL/members/\uc774\ud559\ub9bc/23.07/07.05 \uc218",draft:!1,editUrl:"https://github.com/Self-Driven-Development/TIL/tree/main/\uc774\ud559\ub9bc/23.07/07.05 \uc218.md",tags:[],version:"current",frontMatter:{title:"07.05(\uc218) \uc77c\uc9c0",authors:["hfjxjjd123"]},sidebar:"all",previous:{title:"07.04(\ud654) \uc77c\uc9c0",permalink:"/TIL/members/\uc774\ud559\ub9bc/23.07/07.04 \ud654"},next:{title:"07.07(\uae08) \uc77c\uc9c0",permalink:"/TIL/members/\uc774\ud559\ub9bc/23.07/07.07 \uae08"}},p={},u=[{value:"Rust \uacf5\ubd80",id:"rust-\uacf5\ubd80",level:2},{value:"Closure",id:"closure",level:2},{value:"Map combinator",id:"map-combinator",level:2},{value:"Module",id:"module",level:2},{value:"Testing",id:"testing",level:2},{value:"Rust\uc5d0\uc11c Test \ubc29\uc2dd",id:"rust\uc5d0\uc11c-test-\ubc29\uc2dd",level:3},{value:"Option combinator",id:"option-combinator",level:2},{value:"Iterator",id:"iterator",level:2},{value:"range \u2192 collection",id:"range--collection",level:2},{value:"Android UI \uad6c\ud604\uc911 \uc774\uc288 \uc815\ub9ac",id:"android-ui-\uad6c\ud604\uc911-\uc774\uc288-\uc815\ub9ac",level:2},{value:"ImagePicker \ub9cc\ub4e4\uae30",id:"imagepicker-\ub9cc\ub4e4\uae30",level:3},{value:"ScrollView \ud06c\uae30\ub97c ConstraintLayout\uc5d0 \ub9e1\uae30\uae30",id:"scrollview-\ud06c\uae30\ub97c-constraintlayout\uc5d0-\ub9e1\uae30\uae30",level:3},{value:"ConstraintLayout \uc6d0\ud558\ub294\ub300\ub85c \ub2e4\ub8e8\uae30",id:"constraintlayout-\uc6d0\ud558\ub294\ub300\ub85c-\ub2e4\ub8e8\uae30",level:3},{value:"\u21d2 Guideline \uc815\ub9ac",id:"-guideline-\uc815\ub9ac",level:3}],s={toc:u},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\uc624\ub298\ud55c-\uc77c"},"\uc624\ub298\ud55c \uc77c"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Rust \uacf5\ubd80"),(0,a.kt)("li",{parentName:"ul"},"Android UI \uad6c\ud604"),(0,a.kt)("li",{parentName:"ul"},"\uc0c8\ub85c\uc6b4 \uce74\uacf5\uba54\uc774\ud2b8 GET")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"rust-\uacf5\ubd80"},"Rust \uacf5\ubd80"),(0,a.kt)("h2",{id:"closure"},"Closure"),(0,a.kt)("p",null,": \uc775\uba85\ud568\uc218"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let add = | a:i32, b:i32 | -> i32 {\n    a + b\n};\nOR\nlet add = | a, b | a + b ;\n")),(0,a.kt)("p",null,"\u2192 \ud568\uc218\uc640 \uac70\uc758 \ub3d9\uc77c"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\ud568\uc218\uc640 \uac70\uc758 \ub3d9\uc77c\ud558\uc9c0\ub9cc \uc0ac\uc6a9\ud558\ub294 \uc774\uc720")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\ud0c0\uc785\ucd94\ub860\uc73c\ub85c \uc791\uc131\uc774 \ud3b8\ud568, \uac00\ub3c5\uc131\uc774 \uc88b\uc74c"),(0,a.kt)("li",{parentName:"ol"},"\ub2e4\ub978 \ud568\uc218\uc758 \uc778\uc790\ub85c \ub118\uae30\uae30 \ud3b8\ud568")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"map-combinator"},"Map combinator"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\ub9e4\ud551: \ub370\uc774\ud130\ub97c \ub2e4\ub8f0 \ub54c, \uc5b4\ub5a4 \ub370\uc774\ud130\ub97c \uc6d0\ud558\ub294 \ub370\uc774\ud130\ub85c \ubcc0\ud658\ud558\ub294 \uac83")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},".map()")," : Option \uac12 \ud328\ud134 \ub9e4\uce6d\uc758 \ub2e8\uc21c\ud654"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn maybe_num(): Option<i32> {}\n\nlet word_len = maybe_num().map(|len| len + 1);\n")),(0,a.kt)("p",null,": \ud074\ub85c\uc800\ub97c \ub0b4\ubd80 \ud568\uc218\ub85c \uc0ac\uc6a9,  "),(0,a.kt)("p",null,"Some \u2192 \ub0b4\ubd80 \ud568\uc218 \uc0ac\uc6a9",(0,a.kt)("br",{parentName:"p"}),"\n","None \u2192 \ub0b4\ubd80 \ud568\uc218 \uc0ac\uc6a9 X"),(0,a.kt)("p",null,"\u21d2 return \uac12 \ub610\ud55c Option \uac12"),(0,a.kt)("br",null),(0,a.kt)("p",null,"EXAMPLE"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[derive(Debug)]\nstruct User {\n    user_id: i32,\n    name: String,\n}\n\n/// Locates a user id based on the name.\nfn find_user(name: &str) -> Option<i32> {\n    match name.as_str() {\n        "sam" => Some(1),\n        "matt" => Some(5),\n        _ => None,\n    }\n}\n\nfn main() {\n    find_user("matt")\n    .map(|id| User{ user_id: id, name: "matt".to_owned()})\n    .map(|user| println!("{:?}", user));\n}\n')),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"module"},"Module"),(0,a.kt)("p",null,":\ud568\uc218\ub97c \uc800\uc7a5, \ud568\uc218\ub97c \uac00\uc838\uc640\uc11c \uc0ac\uc6a9\ud558\ub294\uac8c \uc6a9\uc774"),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"mod math{\n    fn add(a:i32, b:i32) -> i32 {\n        a+b\n    }\n    fn sub(a:i32, b:i32) -> i32 {\n        a-b\n    }\n}\n\nfn main() {\n    use math::add;\n    use math::*;\n    -> // add() \uc0ac\uc6a9\uac00\ub2a5 or math::add()\ub85c \uc0ac\uc6a9\n}\n")),(0,a.kt)("p",null," ",(0,a.kt)("inlineCode",{parentName:"p"},"\ubaa8\ub4c8\ud654")," : \uae30\ub2a5\ubcc4\ub85c \ud568\uc218\ub098 \uc790\ub8cc\uad6c\uc870\ub97c \ubb36\uc5b4\uc11c \uc0ac\uc6a9 \u2192 \uc720\uc9c0\ubcf4\uc218\uc6a9\uc774",(0,a.kt)("br",{parentName:"p"}),"\n","\uac01\uac01\uc758 \ubaa8\ub4c8\uc740 \ubcc4\uac1c\uc758 \ud30c\uc77c\ucc98\ub7fc \uc0dd\uac01\ud558\uba74 \ub41c\ub2e4."),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"testing"},"Testing"),(0,a.kt)("h3",{id:"rust\uc5d0\uc11c-test-\ubc29\uc2dd"},"Rust\uc5d0\uc11c Test \ubc29\uc2dd"),(0,a.kt)("p",null,": \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c ",(0,a.kt)("strong",{parentName:"p"},"\ub098\uac00\uac8c \ub418\uba74")," \ud14c\uc2a4\ud2b8\uc5d0 \uc2e4\ud328\ud55c\ub2e4.",(0,a.kt)("br",{parentName:"p"}),"\n","\u2192 ",(0,a.kt)("inlineCode",{parentName:"p"},"assert_eq!(RESULT, EXPECTED, MESSAGE)")," \uc0ac\uc6a9"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"#[cfg(test)]")," : \ucef4\ud30c\uc77c\ub7ec\uac00 test\ub97c \uc704\ud55c \ucf54\ub4dc\uc784\uc744 \uc54c \uc218 \uc788\ub2e4."),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[cfg(test)]\nmod test{\n    use crate::*;\n\n    #[test]\n    fn check_FN(){\n        let result = FN();\n        let expected = VALUE;\n        assert_eq!(result, expected, "NOT FOUND");\n    }\n    #[test]\n    fn check_FN2(){\n        let result = FN();\n        let expected = VALUE2;\n        assert_eq!(result, expected, "NOT FOUND");\n    }\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"test")," - ",(0,a.kt)("inlineCode",{parentName:"p"},"assert_eq!")," \uac00 \ud558\ub098\uc758 \uc138\ud2b8",(0,a.kt)("br",{parentName:"p"}),"\n",": mod\ub294 \ubcc4\ub3c4\uc758 \ud30c\uc77c\uc774\ubbc0\ub85c \uc678\ubd80\uc758 \ud568\uc218\ub97c \uac00\uc838\uc624\uae30 \uc704\ud574\uc11c ",(0,a.kt)("inlineCode",{parentName:"p"},"use crate::FN")," \uc0ac\uc6a9"),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"option-combinator"},"Option combinator"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let OPTION: Option<T>;\n\nOPTION.is_some(); -> bool\nOPTION.is_none(); -> bool\nOPTION.map(|args| body ); -> new T\nOPTION.filter(|args| Statement ); -> Option<T>\nOPTION.or_else(|| Option<T> ); -> new Option<T>\nOPTION.unwrapped_or_else(|| T ); -> T\n")),(0,a.kt)("p",null,"*filter\ub294 inner data\ub97c \ube4c\ub824\uc4f4\ub2e4\ub294 \uc810 \uc8fc\uc758 \u2192 Statement \ub9cc\ub4e4 \ub54c &\uac12 \uc774\uc6a9"),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"iterator"},"Iterator"),(0,a.kt)("p",null,": \ubc18\ubcf5 \uad6c\uc870 \uc21c\ud68c\uc5d0 \ub3c4\uc6c0\ub418\ub294 \ud568\uc218"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let nums = vec![1,2,3,4,5];\n\nlet new_nums: Vec<_> = nums\n    .iter()\n    .map(|num| num + 1 )\n    .collect();\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},".iter()")," \ub85c \ubc18\ubcf5 \uc870\ud68c \u2192 \u2018\uc5b4\ub5a4 \uc5f0\uc0b0\u2019 \uc2e4\ud589",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("inlineCode",{parentName:"p"},".map()")," \u2019\uc5b4\ub5a4 \uc5f0\uc0b0\u2019\uc5d0 \ud574\ub2f9"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},".collect()")," \ub85c \uc0c8\ub85c\uc6b4 ",(0,a.kt)("strong",{parentName:"p"},"\ubca1\ud130")," \uc0dd\uc131 \u2192 collect\ub294 \ubca1\ud130\uc5d0\ub9cc"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Vec<_>")," \uac00 \ud544\uc694\ud55c \uc774\uc720")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\uc5b4\ub5a4\uc5f0\uc0b0")," \ubaa8\uc74c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},".iter()\n\n//chaining \uac00\ub2a5\n.map(||);\n.filter(||);\n.take(NUMBER_TO_GET);\n.find(||); -> Option<T>\n.last();\n.count();\n.min();\n.max();\n\n.collect();\n")),(0,a.kt)("p",null," ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"iter()")," \uc758 \uc758\ubbf8")," = \ucef4\ud30c\uc77c\ub7ec\uc5d0\uac8c \uc21c\ud68c\ub97c \ud560 \uac83\uc774\ub77c\ub294 \uc5b8\uc9c8\uc744 \ud574\uc8fc\ub294 \uc5ed\ud560\ub85c \uc0dd\uac01"),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"range--collection"},"range \u2192 collection"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let ch = 'a'..='f';\nlet num = 1..100;\n\nfor num in 1..100{}\n")),(0,a.kt)("p",null,"\uc77c\uc885\uc758 collection \uc0dd\uc131",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("inlineCode",{parentName:"p"},".."),"\ub294 \ub9c8\uc9c0\ub9c9 \uc81c\uc678, ",(0,a.kt)("inlineCode",{parentName:"p"},"..="),"\ub294 \ub9c8\uc9c0\ub9c9 \ud3ec\ud568"),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"android-ui-\uad6c\ud604\uc911-\uc774\uc288-\uc815\ub9ac"},"Android UI \uad6c\ud604\uc911 \uc774\uc288 \uc815\ub9ac"),(0,a.kt)("h3",{id:"imagepicker-\ub9cc\ub4e4\uae30"},"ImagePicker \ub9cc\ub4e4\uae30"),(0,a.kt)("p",null,"*\ucf54\ub4dc \uc678\ubd80 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9 \uba85\uc2dc"),(0,a.kt)("p",null,"\ub808\uc774\uc544\uc6c3 \ub2e8 : \uae30\ubcf8\uc774\ubbf8\uc9c0 \uc0ac\uc6a9, ImageView\ub85c \ud654\uba74\uc5d0 \ub744\uc6b0\uae30",(0,a.kt)("br",{parentName:"p"}),"\n","Activity.kt \ub2e8: Image \ub744\uc6b8 \ub54c, MotionEvent \ud655\uc778\uc73c\ub85c \ud130\uce58\uc2dc \uc774\ubca4\ud2b8 \ud578\ub4e4\ub9c1 \u2192 new image"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\uc774\ubbf8\uc9c0 \ud074\ub9ad \u2192 MotionEvent\ub85c \ubc1c\uc0dd \u2192 \ud578\ub4e4\ub9c1\ud574\uc11c new image\ub97c \ucd94\ucd9c\ud558\ub294 \ub85c\uc9c1 \uc2e4\ud589 \u2192 new image\ub85c ImageView \ub300\uccb4")),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"scrollview-\ud06c\uae30\ub97c-constraintlayout\uc5d0-\ub9e1\uae30\uae30"},"ScrollView \ud06c\uae30\ub97c ConstraintLayout\uc5d0 \ub9e1\uae30\uae30"),(0,a.kt)("p",null,": only \ub808\uc774\uc544\uc6c3\ub2e8"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},'android:layout_height="0dp"')," \uc0ac\uc6a9\uc2dc, \ud574\ub2f9 \ucef4\ud3ec\ub10c\ud2b8\uc758 height\uc740 Cosntraint\uc5d0 \uc758\ud574 \uacb0\uc815\ub41c\ub2e4."),(0,a.kt)("br",null),(0,a.kt)("p",null,"__"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},'android:layout_height="0dp"'))," is used with the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"ConstraintLayout"))," to create a height constraint that will be resolved based on the constraints applied to the view."),(0,a.kt)("p",null,"__"),(0,a.kt)("p",null,"\uae30\ud0c0..",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("inlineCode",{parentName:"p"},'android:scrollbars="none"')," \u2192 \uc2a4\ud06c\ub864\ubc14 \uc5c6\uc560\uae30"),(0,a.kt)("br",null),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"constraintlayout-\uc6d0\ud558\ub294\ub300\ub85c-\ub2e4\ub8e8\uae30"},"ConstraintLayout \uc6d0\ud558\ub294\ub300\ub85c \ub2e4\ub8e8\uae30"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<androidx.constraintlayout.widget.Guideline\n        android:id="@+id/guideline"\n        android:layout_width="wrap_content"\n        android:layout_height="wrap_content"\n        app:layout_constraintGuide_percent="0.5" />\n')),(0,a.kt)("p",null,"\u2192 constraint\uc758 \uc0c8\ub85c\uc6b4 \uae30\uc900\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5 by ",(0,a.kt)("inlineCode",{parentName:"p"},"constraintGuide_percent")," "),(0,a.kt)("h3",{id:"-guideline-\uc815\ub9ac"},"\u21d2 Guideline \uc815\ub9ac"),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\ud2b9\uc131")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Invisibility"),": ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Guideline"))," is not visible when the app is run"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Orientation"),": A ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Guideline"))," can be either horizontal or vertical, depending on the layout's needs. determined by the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"app:layout_constraintOrientation"))," attribute"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Position"),": The position of a ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Guideline"))," is defined using one of two attributes: "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"app:layout_constraintGuide_percent"))," \u2192  (",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"0.0"))," to ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"1.0")),")",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"app:layout_constraintGuide_begin"))," \u2192 pixel offset (",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"dp")),") "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Placement"),": Views can be aligned or constrained relative to a ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Guideline"))," using the appropriate ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"ConstraintLayout"))," attributes. \u2192 Dynamic Positioning"),(0,a.kt)("br",null),(0,a.kt)("p",null,"\u2192 \uc7ac\uc6b1\ub2d8\uc740 ConstrintLayout\uc5d0\uc11c Guideline\uc73c\ub85c \uc808\ub300\uc801 \uc704\uce58\ub97c \uc7a1\uace0 \uc2dc\uc791\ud558\ub294\uac78 \uc88b\uc544\ud558\uc2dc\ub294\uc9c0\nWidget\uac04 \uc0c1\ub300\uc801 \uc704\uce58\ub85c \ud45c\ud604\ud558\ub294 \uac78 \uc88b\uc544\ud558\uc2dc\ub294\uc9c0 \uad81\uae08"),(0,a.kt)("hr",null))}d.isMDXComponent=!0}}]);