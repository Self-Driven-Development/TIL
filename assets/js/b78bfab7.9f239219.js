"use strict";(self.webpackChunkdogsounds_til=self.webpackChunkdogsounds_til||[]).push([[6709],{68339:(n,e,t)=>{t.d(e,{Zo:()=>b,kt:()=>s});var o=t(39953);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},l=Object.keys(n);for(o=0;o<l.length;o++)t=l[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(o=0;o<l.length;o++)t=l[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var a=o.createContext({}),k=function(n){var e=o.useContext(a),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},b=function(n){var e=k(n.components);return o.createElement(a.Provider,{value:e},n.children)},f="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},u=o.forwardRef((function(n,e){var t=n.components,r=n.mdxType,l=n.originalType,a=n.parentName,b=c(n,["components","mdxType","originalType","parentName"]),f=k(t),u=r,s=f["".concat(a,".").concat(u)]||f[u]||d[u]||l;return t?o.createElement(s,i(i({ref:e},b),{},{components:t})):o.createElement(s,i({ref:e},b))}));function s(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var l=t.length,i=new Array(l);i[0]=u;var c={};for(var a in e)hasOwnProperty.call(e,a)&&(c[a]=e[a]);c.originalType=n,c[f]="string"==typeof n?n:r,i[1]=c;for(var k=2;k<l;k++)i[k]=t[k];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},85169:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>k});var o=t(855),r=(t(39953),t(68339));const l={id:"08-\uc6d4"},i="23.05.08.",c={unversionedId:"\uc1a1\uc740\uc218/23.05/08-\uc6d4",id:"\uc1a1\uc740\uc218/23.05/08-\uc6d4",title:"23.05.08.",description:"- \ucef4\uacf5\uc2e4",source:"@site/members/\uc1a1\uc740\uc218/23.05/08 (\uc6d4).md",sourceDirName:"\uc1a1\uc740\uc218/23.05",slug:"/\uc1a1\uc740\uc218/23.05/08-\uc6d4",permalink:"/TIL/members/\uc1a1\uc740\uc218/23.05/08-\uc6d4",draft:!1,editUrl:"https://github.com/Self-Driven-Development/TIL/tree/main/members/\uc1a1\uc740\uc218/23.05/08 (\uc6d4).md",tags:[],version:"current",frontMatter:{id:"08-\uc6d4"},sidebar:"all",previous:{title:"23.05.07.",permalink:"/TIL/members/\uc1a1\uc740\uc218/23.05/07-\uc77c"},next:{title:"23.05.09.",permalink:"/TIL/members/\uc1a1\uc740\uc218/23.05/09-\ud654"}},a={},k=[{value:"\ucef4\uacf5\uc2e4",id:"\ucef4\uacf5\uc2e4",level:2},{value:"tetris project First week",id:"tetris-project-first-week",level:3},{value:"CheckToMove, DrawChange, AddBlockToField, DeleteLine\ud568\uc218 \uad6c\ud604\ud558\uae30",id:"checktomove-drawchange-addblocktofield-deleteline\ud568\uc218-\uad6c\ud604\ud558\uae30",level:3},{value:"\uadf8\ub9bc\uc790 \uad6c\ud604, \uc810\uc218\uacc4\uc0b0 \uc218\uc815, nextBlock 2\uac1c \uadf8\ub9ac\uae30",id:"\uadf8\ub9bc\uc790-\uad6c\ud604-\uc810\uc218\uacc4\uc0b0-\uc218\uc815-nextblock-2\uac1c-\uadf8\ub9ac\uae30",level:3}],b={toc:k},f="wrapper";function d(n){let{components:e,...t}=n;return(0,r.kt)(f,(0,o.Z)({},b,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"230508"},"23.05.08."),(0,r.kt)("h1",{id:"today-i-learned"},"Today I learned"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ucef4\uacf5\uc2e4")),(0,r.kt)("h2",{id:"\ucef4\uacf5\uc2e4"},"\ucef4\uacf5\uc2e4"),(0,r.kt)("h3",{id:"tetris-project-first-week"},"tetris project First week"),(0,r.kt)("h3",{id:"checktomove-drawchange-addblocktofield-deleteline\ud568\uc218-\uad6c\ud604\ud558\uae30"},"CheckToMove, DrawChange, AddBlockToField, DeleteLine\ud568\uc218 \uad6c\ud604\ud558\uae30"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-C"},"int CheckToMove(char f[HEIGHT][WIDTH],int currentBlock,int blockRotate, int blockY, int blockX){\n    int i, j;\n    for (i = 0; i < 4; i++) {\n        for (j = 0; j < 4; j++) {\n            if (block[currentBlock][blockRotate][i][j] == 1) {\n                //\ube14\ub7ed\uc774 field\ub97c \ubc97\uc5b4\ub098\ub294\uc9c0 check\n                if (i + blockY >= HEIGHT || i + blockY < 0) return 0;\n                if (j + blockX >= WIDTH || j + blockX < 0)return 0;\n                //\uc774\ubbf8 field\uc704\uc5d0 \ube14\ub7ed\uc774 \uc788\ub294\uc9c0 check\n                if (f[i + blockY][j + blockX]) return 0;\n            }\n        }\n    }\n    return 1;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-C"},'void DrawChange(char f[HEIGHT][WIDTH],int command,int currentBlock,int blockRotate, int blockY, int blockX){\n    int i, j;\n    switch (command) {\n    case KEY_UP:\n        for (i = 0; i < 4; i++)\n            for (j = 0; j < 4; j++) {\n                if (block[currentBlock][(blockRotate+3)%4][i][j] && (i + blockY >= 0)) {\n                    //block\uc744 \uc0ad\uc81c\ud574\uc8fc\ub294 \uacbd\uc6b0, drawblock\uc5d0\uc11c \'.\'\uc744 \ucc0d\ub294 \uac83\uc774 \uc544\ub2c8\ub77c ncurses.h\uc758 move,printw\uc0ac\uc6a9\n                    //drawblock \uac19\uc740\uacbd\uc6b0 attron\uc744 \uc0ac\uc6a9\ud574 effect\ub97c \uc900\ub2e4\n                    //ncurses.h\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\ub294, \uc774\ubbf8 \ucd9c\ub825\uc774 \uc644\ub8cc\ub41c \ud589\uc73c\ub85c \uc62c\ub77c\uac00 \uc218\uc815\uc744 \ud574\uc57c\ud558\uae30 \ub54c\ubb38\n                    move(i + blockY + 1, j + blockX + 1);\n                    printw(".");\n                }\n            }\n        break;\n    case KEY_DOWN:\n        for (i = 0; i < 4; i++)\n            for (j = 0; j < 4; j++) {\n                if (block[currentBlock][blockRotate][i][j] && (i + blockY - 1 >= 0)) {\n                    move(i + blockY, j + blockX + 1);\n                    printw(".");\n                }\n            }\n        break;\n    case KEY_RIGHT:\n        for (i = 0; i < 4; i++)\n            for (j = 0; j < 4; j++) {\n                if (block[currentBlock][blockRotate][i][j] && (i + blockY >= 0)) {\n                    move(i + blockY + 1, j + blockX);\n                    printw(".");\n                }\n            }\n        break;\n    case KEY_LEFT:\n        for (i = 0; i < 4; i++)\n            for (j = 0; j < 4; j++) {\n                if (block[currentBlock][blockRotate][i][j] && (i + blockY >= 0)) {\n                    move(i + blockY + 1, j + blockX + 2);\n                    printw(".");\n                }\n            }\n        break;\n    default:\n        break;\n    }\n    DrawField();\n    DrawBlockWithFeatures(blockY, blockX, currentBlock, blockRotate);\n    move(HEIGHT, WIDTH + 10);\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-C"},"void BlockDown(int sig){\n    timed_out = 0;\n    if (CheckToMove(field, nextBlock[0], blockRotate, blockY + 1, blockX)) {\n        blockY++;\n    }\n    else if (blockY == -1)\n        gameOver = 1;\n    else {\n        AddBlockToField(field, nextBlock[0], blockRotate, blockY, blockX);\n        score += DeleteLine(field);\n        nextBlock[0] = nextBlock[1];\n        nextBlock[1] = rand() % 7;\n        DrawNextBlock(nextBlock);\n        DrawField();\n        blockY = -1;\n        blockX = WIDTH / 2 - 2;\n        blockRotate = 0;\n        PrintScore(score);\n        DrawField();\n    }\n    DrawChange(field, KEY_DOWN, nextBlock[0], blockRotate, blockY, blockX);\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-C"},"int DeleteLine(char f[HEIGHT][WIDTH]){\n    int flag;\n    int count = 0;\n    int i,j,k;\n    //\uc704\uc5d0\uc11c\ubd80\ud130 \uac80\uc0ac\ud55c\ub2e4\n    for (i = HEIGHT - 1; i >= 0; i--) {\n        flag = 0;\n        for (j = 0; j < WIDTH; j++) {\n            if (!f[i][j]) {\n                flag = 1;\n                break;\n            }\n        }\n        //\ubaa8\ub4e0 \uce78\uc774 \ucc44\uc6cc\uc838 \uc788\uc73c\uba74 \uc2e4\ud589\n        if (!flag) {\n            for (j = i; j > 0; j--) {\n                if (j == 0) {\n                    for (k = 0; k < WIDTH; k++)\n                        f[j][k] = 0;\n                }\n                else {\n                    for (k = 0; k < WIDTH; k++)\n                        f[j][k] = f[j - 1][k];\n                }\n            }\n            i++;\n            count++;\n        }\n    }\n\n    return count * count * 100;\n}\n\uc2dc\uac04\ubcf5\uc7a1\ub3c4 O(HEIGHT^2)\n")),(0,r.kt)("h3",{id:"\uadf8\ub9bc\uc790-\uad6c\ud604-\uc810\uc218\uacc4\uc0b0-\uc218\uc815-nextblock-2\uac1c-\uadf8\ub9ac\uae30"},"\uadf8\ub9bc\uc790 \uad6c\ud604, \uc810\uc218\uacc4\uc0b0 \uc218\uc815, nextBlock 2\uac1c \uadf8\ub9ac\uae30"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-C"},"void DrawShadow(int y, int x, int blockID,int blockRotate){\n    int i;\n    for (i = 0; i < HEIGHT - 1; i++) {\n        //\uc6c0\uc9c1\uc77c \uc218 \uc5c6\uc744 \ub54c\uae4c\uc9c0 \uccb4\ud06c, \uc6c0\uc9c1\uc77c \uc218 \uc5c6\ub2e4\uba74 y-1\uce78\uc5d0 \uadf8\ub9bc\uc790 \uadf8\ub9ac\uae30\n        if (!CheckToMove(field, blockID, blockRotate, i, x)) {\n            DrawBlock(i-1, x, blockID, blockRotate, '/');\n            break;\n        }\n    }\n}\n\nvoid DrawBlockWithFeatures(int y, int x, int blockID, int blockRotate) {\n    //\uae30\uc874 DrawBlock\uc790\ub808\uc5d0 DrawBlockWithFeatures\ub97c \uc368\ub123\uc5b4 \uadf8\ub9bc\uc790\ub3c4 \uac19\uc774 \uadf8\ub9b4 \uc218 \uc788\ub3c4\ub85d \uc124\uacc4\n    DrawBlock(y, x, blockID, blockRotate, ' ');\n    DrawShadow(y, x, blockID, blockRotate);\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-C"},'//next \ube14\ub7ed\uc744 \ud558\ub098 \ub354 \uadf8\ub824\uc57c \ud558\ubbc0\ub85c score \ubc11\uc73c\ub85c \ub0b4\ub9ac\uace0, nextBlock[2]\uadf8\ub9ac\uae30\nvoid PrintScore(int score){\n    move(17,WIDTH+11);\n    //printw("%8d",score);\n}\n\nvoid DrawNextBlock(int *nextBlock){\n    // int i, j;\n    // for( i = 0; i < 4; i++ ){\n    //  move(4+i,WIDTH+13);\n    //  for( j = 0; j < 4; j++ ){\n    //      if( block[nextBlock[1]][0][i][j] == 1 ){\n    //          attron(A_REVERSE);\n    //          printw(" ");\n    //          attroff(A_REVERSE);\n    //      }\n    //      else printw(" ");\n    //  }\n    // }\n    for (i = 0; i < 4; i++) {\n        move(10 + i, WIDTH + 13);\n        for (j = 0; j < 4; j++) {\n            if (block[nextBlock[2]][0][i][j] == 1) {\n                attron(A_REVERSE);\n                printw(" ");\n                attroff(A_REVERSE);\n            }\n            else printw(" ");\n        }\n    }\n}\n\nvoid DrawOutline(){\n    int i,j;\n    // DrawBox(0,0,HEIGHT,WIDTH);\n\n    // move(2,WIDTH+10);\n    // printw("NEXT BLOCK");\n    // DrawBox(3,WIDTH+10,4,8);\n    DrawBox(9, WIDTH + 10, 4, 8);\n\n    move(15,WIDTH+10);\n    // printw("SCORE");\n    DrawBox(16,WIDTH+10,1,8);\n}\n\uc2dc\uac04\ubcf5\uc7a1\ub3c4 O(1)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-C"},"void AddBlockToField(char f[HEIGHT][WIDTH],int currentBlock,int blockRotate, int blockY, int blockX){\n    // int i, j;\n    int touched = 0;\n    // for (i = 0; i < 4; i++) {\n    //  for (j = 0; j < 4; j++) {\n    //      if (block[currentBlock][blockRotate][i][j]) {\n                // if (0 <= i + blockY && i + blockY < HEIGHT && 0 <= j + blockX && j + blockX < WIDTH) {\n                    //\ub3c4\ud615\uc5d0 \ub2ff\uac70\ub098, \ud14c\ud2b8\ub9ac\uc2a4 \ud544\ub4dc\uc758 \ubc14\ub2e5\uc5d0 \ub3c4\ub2ec\ud558\uba74 touch++;\n                    if (f[i + blockY + 1][j + blockX] == 1 || i + blockY + 1 == HEIGHT) touched++;\n    //              f[i + blockY][j + blockX] = 1;\n    //          }\n    //      }\n    //  }\n    // }\n    //score\uc5d0 \uc810\uc218\ub97c \ucd94\uac00\ud55c\ub2e4\n    score += touched * 10;\n}\n\uc2dc\uac04\ubcf5\uc7a1\ub3c4 O(1)\n")))}d.isMDXComponent=!0}}]);