"use strict";(self.webpackChunkdogsounds_til=self.webpackChunkdogsounds_til||[]).push([[2473],{68339:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>E});var r=t(39953);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},u=Object.keys(e);for(r=0;r<u.length;r++)t=u[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)t=u[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),s=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(o.Provider,{value:n},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,u=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(t),c=i,E=m["".concat(o,".").concat(c)]||m[c]||f[c]||u;return t?r.createElement(E,a(a({ref:n},p),{},{components:t})):r.createElement(E,a({ref:n},p))}));function E(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var u=t.length,a=new Array(u);a[0]=c;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[m]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<u;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},27382:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>f,frontMatter:()=>u,metadata:()=>l,toc:()=>s});var r=t(855),i=(t(39953),t(68339));const u={},a="23.05.31",l={unversionedId:"\uac15\uc8fc\ud601/23.05/05.31 \uc77c\uc9c0",id:"\uac15\uc8fc\ud601/23.05/05.31 \uc77c\uc9c0",title:"23.05.31",description:"\uc624\ub298 \ud55c \uc77c",source:"@site/members/\uac15\uc8fc\ud601/23.05/05.31 \uc77c\uc9c0.md",sourceDirName:"\uac15\uc8fc\ud601/23.05",slug:"/\uac15\uc8fc\ud601/23.05/05.31 \uc77c\uc9c0",permalink:"/TIL/members/\uac15\uc8fc\ud601/23.05/05.31 \uc77c\uc9c0",draft:!1,editUrl:"https://github.com/Self-Driven-Development/TIL/tree/main/\uac15\uc8fc\ud601/23.05/05.31 \uc77c\uc9c0.md",tags:[],version:"current",frontMatter:{},sidebar:"all",previous:{title:"23.05.30",permalink:"/TIL/members/\uac15\uc8fc\ud601/23.05/05.30 \uc77c\uc9c0"},next:{title:"\ubbfc\uc138\ub9bc",permalink:"/TIL/members/\ubbfc\uc138\ub9bc/"}},o={},s=[{value:"\uc624\ub298 \ud55c \uc77c",id:"\uc624\ub298-\ud55c-\uc77c",level:2},{value:"\uc6d0\ud615\ud050 \ub3d9\uc801 \ubc30\uc5f4",id:"\uc6d0\ud615\ud050-\ub3d9\uc801-\ubc30\uc5f4",level:2},{value:"\ud2b8\ub9ac",id:"\ud2b8\ub9ac",level:2},{value:"\uadf8\ub798\ud504",id:"\uadf8\ub798\ud504",level:2},{value:"\ud574\uc2dc",id:"\ud574\uc2dc",level:2},{value:"\ubb38\uc790\uc5f4 \ub9e4\uce6d",id:"\ubb38\uc790\uc5f4-\ub9e4\uce6d",level:2},{value:"\ub0b4\uc77c \ud560 \uc77c",id:"\ub0b4\uc77c-\ud560-\uc77c",level:2}],p={toc:s},m="wrapper";function f(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"230531"},"23.05.31"),(0,i.kt)("h2",{id:"\uc624\ub298-\ud55c-\uc77c"},"\uc624\ub298 \ud55c \uc77c"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\uc54c\uace0\ub9ac\uc998 \ubb38\uc81c \ud480\uc774"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","\ube14\ub85c\uadf8 \uae00 \uc5c5\ub85c\ub4dc"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","GDG \ucee8\ud37c\ub7f0\uc2a4 ",(0,i.kt)("inlineCode",{parentName:"li"},"2023\ud504\ub860\ud2b8\uc5d4\ub4dc \ud2b8\ub80c\ub4dc \ub530\ub77c\uc7a1\uae30")," \ucc38\uc5ec"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","\uc54c\uace0\ub9ac\uc998 \uc2dc\ud5d8 \uacf5\ubd80")),(0,i.kt)("hr",null),(0,i.kt)("h1",{id:"\ube14\ub85c\uadf8-\uae00-\uc5c5\ub85c\ub4dc"},"\ube14\ub85c\uadf8 \uae00 \uc5c5\ub85c\ub4dc"),(0,i.kt)("p",null,"\ub4dc\ub514\uc5b4 \ube14\ub85c\uadf8 \uae00\uc744 \uc5c5\ub85c\ub4dc \ud588\ub2e4.\n\ud06c\ub86c \uc775\uc2a4\ud150\uc158 \uac1c\ubc1c\ud558\uba74\uc11c \uacaa\uc5c8\ub358 \ud2b8\ub7ec\ube14\uc288\ud305 \uacbd\ud5d8\uacfc \ud68c\uace0\ub97c \uc791\uc131\ud588\ub2e4. ",(0,i.kt)("a",{parentName:"p",href:"https://kang-ju.tistory.com/17"},"\ube14\ub85c\uadf8")),(0,i.kt)("h1",{id:"\uc54c\uace0\ub9ac\uc998-\uc2dc\ud5d8-\uacf5\ubd80"},"\uc54c\uace0\ub9ac\uc998 \uc2dc\ud5d8 \uacf5\ubd80"),(0,i.kt)("h2",{id:"\uc6d0\ud615\ud050-\ub3d9\uc801-\ubc30\uc5f4"},"\uc6d0\ud615\ud050 \ub3d9\uc801 \ubc30\uc5f4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <stdlib.h>\n#define QUEUE_SIZE 10\n\nint *queue;\nint front;          // \uc804\ub2e8\nint rear;           // \ud6c4\ub2e8\nint size = 1;\n\nint isEmpty() {\n    if (front == rear) return 1;\n    else return 0;\n}\n\n// \ud050\uac00 \ud3ec\ud654 \uc0c1\ud0dc\uc778\uc9c0 \ud655\uc778\ud558\ub294 \uc5f0\uc0b0\nint isFull() {\n    if (front == (rear + 1) % (QUEUE_SIZE * size)) return 1;\n    else return 0;\n}\n\nint queueSize() {\n    return(rear - front + (QUEUE_SIZE * size)) % (QUEUE_SIZE * size);\n}\n\nvoid enqueue(int item) {\n    if (isFull()) {\n        printf(" QUEUE\\n");\n        int *temp = (int*)malloc((QUEUE_SIZE * size) * sizeof(int));\n\n        if (rear > front)\n            for (int i = 0; i < (rear + 1); i++) temp[i] = queue[i];\n        else {\n            for (int i = front; i < (QUEUE_SIZE * size); i++) temp[i - front] = queue[i];\n            for (int i = 0; i < (rear + 1); i++) temp[QUEUE_SIZE * size - (rear + 1) + i] = queue[i];\n\n            front = 0;\n            rear = QUEUE_SIZE * size - 1;\n        }\n\n        free(queue);\n\n        queue = (int*)malloc((QUEUE_SIZE * (size + 1)) * sizeof(int));\n\n        for (int i = 0; i < (rear + 1); i++) queue[i] = temp[i];\n\n        rear = (rear + 1) % (QUEUE_SIZE * (size + 1));\n        queue[rear] = item;\n\n        size++;\n\n        free(temp);\n    }\n    else {\n        rear = (rear + 1) % (QUEUE_SIZE * size);\n        queue[rear] = item;\n    }\n}\n\nint dequeue() {\n    if (isEmpty()) {    // \ud050\uac00 \uacf5\ubc31 \uc0c1\ud0dc\uc778 \uacbd\uc6b0\n        printf("\\n\\n Queue is Empty!!\\n");\n        return 0;\n    }\n    else\n    {\n        if (queueSize() % QUEUE_SIZE == 0)\n        {\n            printf(" DEQUEUE\\n");\n            int re;\n            int *temp = (int*)malloc((QUEUE_SIZE * (size - 1)) * sizeof(int));\n\n            re = queue[front + 1];\n\n            if (rear > front)\n                for (int i = front + 1; i < rear; i++) temp[i - front] = queue[i + 1];\n            else {\n                for (int i = front; i < QUEUE_SIZE * size; i++) temp[i - front] = queue[i + 1];\n                for (int i = 0; i < (rear + 1); i++) temp[QUEUE_SIZE * (size - 1) - (rear + 1) + i] = queue[i];\n            }\n\n            free(queue);\n\n            queue = (int*)malloc((QUEUE_SIZE * (size - 1)) * sizeof(int));\n\n            for (int i = 0; i < QUEUE_SIZE * (size - 1); i++) queue[i] = temp[i];\n\n            front = 0;\n            rear = QUEUE_SIZE * (size - 1) - 1;\n            size--;\n\n            free(temp);\n            return re;\n        }\n        else {\n            front = (front + 1) % (QUEUE_SIZE * size);\n            return queue[front];\n        }\n    }\n    return 0;\n}\n\n// \ud050\uc758 \uc6d0\uc18c\ub97c \ucd9c\ub825\ud558\ub294 \uc5f0\uc0b0\nvoid printQueue() {\n    int i, maxi = rear;\n    if (front >= rear) maxi += (QUEUE_SIZE * size);\n    printf("Queue size is [%2d]= ", queueSize());\n    for (i = front + 1; i <= maxi; i++)\n        printf("%2d ", queue[i % (QUEUE_SIZE * size)]);\n    printf("\\n");\n}\n\nvoid main(void) {\n    int i;\n    queue = (int*)malloc(QUEUE_SIZE * sizeof(int));\n\n    for (i = 11; i < 30; i++) enqueue(i);\n    //printf("%d\\n", queueSize());\n    printQueue();\n\n    for (i = 1; i < 4; i++) dequeue();\n    printQueue();\n\n    for (i = 1; i < 4; i++) enqueue(i);\n    printQueue();\n\n    for (i = 1; i < 11; i++) dequeue();\n    printQueue();\n\n    enqueue(90);\n    printQueue();\n\n    free(queue);\n    getchar();\n}\n')),(0,i.kt)("h2",{id:"\ud2b8\ub9ac"},"\ud2b8\ub9ac"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"AVL \ud2b8\ub9ac"),(0,i.kt)("li",{parentName:"ul"},"\ub808\ub4dc \ube14\ub799 \ud2b8\ub9ac"),(0,i.kt)("li",{parentName:"ul"},"\ud5c8\ud504\ub9cc \ud2b8\ub9ac")),(0,i.kt)("h2",{id:"\uadf8\ub798\ud504"},"\uadf8\ub798\ud504"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\ud504\ub9bc \uc54c\uace0\ub9ac\uc998"),(0,i.kt)("li",{parentName:"ul"},"\ub2e4\uc775\uc2a4\ud2b8\ub77c \uc54c\uace0\ub9ac\uc998"),(0,i.kt)("li",{parentName:"ul"},"A","*"," \uc54c\uace0\ub9ac\uc998")),(0,i.kt)("h2",{id:"\ud574\uc2dc"},"\ud574\uc2dc"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\ub354\ube14 \ud574\uc2f1")),(0,i.kt)("h2",{id:"\ubb38\uc790\uc5f4-\ub9e4\uce6d"},"\ubb38\uc790\uc5f4 \ub9e4\uce6d"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\ubcf4\uc774\uc5b4 \ubb34\uc5b4")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"\ub0b4\uc77c-\ud560-\uc77c"},"\ub0b4\uc77c \ud560 \uc77c"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\uc54c\uace0\ub9ac\uc998 \ubb38\uc81c \ud480\uc774"),(0,i.kt)("li",{parentName:"ul"},"\ubc14\ub2d0\ub77c JS \ub9ac\uc561\ud2b8 \uc2a4\ud130\ub514 \ub0b4\uc6a9 \uc815\ub9ac \ubc0f \ucc38\uc5ec"),(0,i.kt)("li",{parentName:"ul"},"\uce74\uacf5\uc2e4\ub85d \uc791\uc131 \ud398\uc774\uc9c0 \ub9c8\ubb34\ub9ac \uc791\uc5c5(react-hook-form \uace0\ub824)"),(0,i.kt)("li",{parentName:"ul"},"\uce74\uacf5\uc2e4\ub85d \ud68c\uc758")))}f.isMDXComponent=!0}}]);